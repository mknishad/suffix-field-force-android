Index: app/src/main/java/com/suffix/fieldforce/akg/activity/SaleActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.suffix.fieldforce.akg.activity;\n\nimport android.content.Intent;\nimport android.graphics.BlendMode;\nimport android.graphics.BlendModeColorFilter;\nimport android.graphics.Color;\nimport android.graphics.PorterDuff;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.Spinner;\nimport android.widget.Toast;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\n\nimport com.nex3z.togglebuttongroup.SingleSelectToggleGroup;\nimport com.suffix.fieldforce.R;\nimport com.suffix.fieldforce.akg.adapter.CustomArrayAdapter;\nimport com.suffix.fieldforce.akg.database.manager.RealMDatabaseManager;\nimport com.suffix.fieldforce.akg.model.CustomerData;\nimport com.suffix.fieldforce.akg.util.AkgConstants;\nimport com.suffix.fieldforce.preference.FieldForcePreferences;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport butterknife.OnClick;\n\npublic class SaleActivity extends AppCompatActivity {\n\n  private static final String TAG = \"SaleActivity\";\n\n  @BindView(R.id.toolbar)\n  Toolbar toolbar;\n\n  @BindView(R.id.toggleGroup)\n  SingleSelectToggleGroup toggleGroup;\n\n  @BindView(R.id.imgDropArrow)\n  ImageView imgDropArrow;\n\n  @BindView(R.id.spinnerUsers)\n  Spinner spinnerUsers;\n\n  @BindView(R.id.btnSale)\n  Button btnSale;\n\n  @OnClick(R.id.btnSale)\n  public void gotoCheckout() {\n    if (spinnerUsers.getSelectedItemPosition() > 0) {\n      selectedCustomer = filteredCustomerList.get(spinnerUsers.getSelectedItemPosition());\n      Intent intent = new Intent(SaleActivity.this, ProductCategoryActivity.class);\n      intent.putExtra(AkgConstants.CUSTOMER_INFO, selectedCustomer);\n      startActivity(intent);\n    } else {\n      Toast.makeText(SaleActivity.this, \"You must select a customer first.\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  @OnClick(R.id.imgDropArrow)\n  public void toggleKeyboard() {\n    spinnerUsers.performClick();\n  }\n\n  private FieldForcePreferences preferences;\n  private ArrayAdapter<CustomerData> spinnerAdapter;\n  private List<CustomerData> customerDataList;\n  private List<CustomerData> filteredCustomerList;\n  private CustomerData selectedCustomer = null;\n  private RealMDatabaseManager realMDatabaseManager;\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_sale);\n    ButterKnife.bind(this);\n\n    setupToolbar();\n\n    realMDatabaseManager = new RealMDatabaseManager();\n    preferences = new FieldForcePreferences(this);\n    customerDataList = new ArrayList<>();\n    filteredCustomerList = new ArrayList<>();\n\n    getAllCustomer();\n    setupToggleGroup();\n  }\n\n  private void setupToolbar() {\n    setSupportActionBar(toolbar);\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n      toolbar.setTitleTextColor(getResources().getColor(android.R.color.white, null));\n    } else {\n      toolbar.setTitleTextColor(getResources().getColor(android.R.color.white));\n    }\n\n    if (getSupportActionBar() != null) {\n      getSupportActionBar().setDisplayShowTitleEnabled(true);\n      getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n      getSupportActionBar().setTitle(\"Sales\");\n    }\n\n    toolbar.setNavigationOnClickListener(new View.OnClickListener() {\n      @Override\n      public void onClick(View v) {\n        onBackPressed();\n      }\n    });\n\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n      toolbar.getNavigationIcon().setColorFilter(new BlendModeColorFilter(Color.WHITE,\n          BlendMode.SRC_ATOP));\n    } else {\n      toolbar.getNavigationIcon().setColorFilter(Color.WHITE, PorterDuff.Mode.SRC_ATOP);\n    }\n  }\n\n  private void setupToggleGroup() {\n    toggleGroup.setOnCheckedChangeListener(new SingleSelectToggleGroup.OnCheckedChangeListener() {\n      @Override\n      public void onCheckedChanged(SingleSelectToggleGroup group, int checkedId) {\n        switch (checkedId) {\n          case R.id.choice_a:\n            filterCustomers(\"a\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_b:\n            filterCustomers(\"b\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_c:\n            filterCustomers(\"c\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_d:\n            filterCustomers(\"d\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_e:\n            filterCustomers(\"e\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_f:\n            filterCustomers(\"f\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_g:\n            filterCustomers(\"g\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_h:\n            filterCustomers(\"h\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_i:\n            filterCustomers(\"i\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_j:\n            filterCustomers(\"j\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_k:\n            filterCustomers(\"k\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_l:\n            filterCustomers(\"l\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_m:\n            filterCustomers(\"m\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_n:\n            filterCustomers(\"n\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_o:\n            filterCustomers(\"o\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_p:\n            filterCustomers(\"p\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_q:\n            filterCustomers(\"q\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_r:\n            filterCustomers(\"r\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_s:\n            filterCustomers(\"s\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_t:\n            filterCustomers(\"t\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_u:\n            filterCustomers(\"u\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_v:\n            filterCustomers(\"v\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_w:\n            filterCustomers(\"w\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_x:\n            filterCustomers(\"x\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_y:\n            filterCustomers(\"y\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_z:\n            filterCustomers(\"z\");\n            spinnerUsers.setSelection(0);\n            break;\n          case R.id.choice_all:\n            filterCustomers(\"all\");\n            spinnerUsers.setSelection(0);\n            break;\n        }\n      }\n    });\n  }\n\n  private void filterCustomers(String start) {\n    filteredCustomerList.clear();\n    filteredCustomerList.add(new CustomerData(\"Select Customer\"));\n    if (start.toLowerCase().equalsIgnoreCase(\"all\")) {\n      filteredCustomerList.addAll(customerDataList);\n    } else {\n      for (CustomerData customerData : customerDataList) {\n        if (customerData.getCustomerName().toLowerCase().startsWith(start.toLowerCase())) {\n          filteredCustomerList.add(customerData);\n        }\n      }\n    }\n    Log.d(TAG, \"filterCustomers: filteredCustomerList = \" + filteredCustomerList);\n    spinnerAdapter.notifyDataSetChanged();\n  }\n\n  private void getAllCustomer() {\n    customerDataList = realMDatabaseManager.prepareCustomerData();\n    filteredCustomerList.clear();\n    filteredCustomerList.add(new CustomerData(\"Select Customer\"));\n    filteredCustomerList.addAll(customerDataList);\n    spinnerAdapter = new CustomArrayAdapter(SaleActivity.this, R.layout.spinner_item, filteredCustomerList);\n    spinnerUsers.setAdapter(spinnerAdapter);\n    spinnerUsers.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n      @Override\n      public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n        selectedCustomer = filteredCustomerList.get(position);\n      }\n\n      @Override\n      public void onNothingSelected(AdapterView<?> parent) {\n\n      }\n    });\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/suffix/fieldforce/akg/activity/SaleActivity.java	(revision a65accfc562424b4c3d3cf5b63d719f935156291)
+++ app/src/main/java/com/suffix/fieldforce/akg/activity/SaleActivity.java	(date 1606978462000)
@@ -53,6 +53,9 @@
   @BindView(R.id.btnSale)
   Button btnSale;
 
+  @BindView(R.id.btnVisited)
+  Button btnVisit;
+
   @OnClick(R.id.btnSale)
   public void gotoCheckout() {
     if (spinnerUsers.getSelectedItemPosition() > 0) {
